#!/usr/bin/lua
--! SPDX-License-Identifier: AGPL-3.0-or-later
--!
--! LibreMesh
--! Copyright (C) 2019  Marcos Gutierrez <gmarcos@altermundi.net>
--! Copyright (C) 2019  Luandro <luandro@gmail.com>
--! Copyright (C) 2020  Santiago Piccinini <spiccinini@altermundi.net>

local json = require("luci.jsonc")
local vouchera = require("voucher.vouchera")

local function shell(command)
    local handle = io.popen(command)
    local result = handle:read("*a")
    handle:close()
    return result
end

vouchera.init()

--! The idea is to put voucher modifications into new keys of the shared-state db.
--! So a vocher may be in multiple keys of the shared-state database but the "old"
--! keys will die beacause of the bleachTTL when all the nodes pick up the last updated
--! version of the voucher.
local result = {}
for _, voucher in pairs(vouchera.vouchers) do
    local text = voucher.tostring()
    local hash = shell('echo "'..text..'" | md5sum | cut -c -8'):gsub("\n","")
    result[hash] = voucher
end

io.popen("shared-state insert pirania-vouchers", "w"):write(json.stringify(result))
